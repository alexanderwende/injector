const e="ioc:parameters",t="ioc:properties",r=e=>Reflect.getOwnMetadata("ioc:token",e),n=(e,t)=>{Reflect.defineMetadata("ioc:token",t,e)},s=(t,r)=>(f(t),Reflect.getOwnMetadata(e,t).get(r)),o=(t,r,n)=>{f(t);const s=Reflect.getOwnMetadata(e,t);Object.assign(s.get(r),n)},a=t=>(f(t),Reflect.getOwnMetadata(e,t)),c=(e,r)=>(p(e,r),Reflect.getOwnMetadata(t,e).get(r)),i=(e,r,n)=>{p(e,r);const s=Reflect.getOwnMetadata(t,e);Object.assign(s.get(r),n)},l=e=>(d(e),Reflect.getOwnMetadata(t,e)),f=t=>{if(!Reflect.hasOwnMetadata(e,t)){const r=Reflect.getOwnMetadata("design:paramtypes",t)||[],n=new Map(r.map((e,t)=>[t,h(e)]));Reflect.defineMetadata(e,n,t)}},p=(e,t)=>{const r=l(e);if(!r.has(t)){const n=Reflect.getOwnMetadata("design:type",e.prototype,t);r.set(t,h(n))}},d=e=>{Reflect.hasOwnMetadata(t,e)||Reflect.defineMetadata(t,new Map,e)},h=(e,t=!1)=>({token:e,optional:t});class u{constructor(e){this.description=e}}const g=e=>(t,r,n)=>{const a="number"==typeof n,l=e instanceof u?e:a?s(t,n).token:c(t.constructor,r).token;a?o(t,n,{token:l}):i(t.constructor,r,{token:l})},w=()=>e=>{const t=new u(e.name);n(e,t)},v=()=>(e,t,r)=>{"number"==typeof r?o(e,r,{optional:!0}):i(e.constructor,t,{optional:!0})},R=e=>(...t)=>Reflect.construct(e,t),_=e=>{let t;return(...r)=>(t||(t=Reflect.construct(e,r)),t)},M=e=>()=>e,y=new Error("Provider is not registered with an injector.");class O{constructor(e,t=new Map,r=new Map){this.factory=e,this.parameters=t,this.properties=r}provide(e){if(e||(e=this.injector),!e)throw y;const t=this.resolveParameters(e),r=this.resolveProperties(e);return this.createValue(t,r)}resolveParameters(e){const t=[];return this.parameters.forEach(({token:r,optional:n},s)=>t[s]=e.resolve(r,n)),t}resolveProperties(e){const t={};return this.properties.forEach(({token:r,optional:n},s)=>t[s]=e.resolve(r,n)),t}createValue(e=[],t={}){const r=this.factory(...e);return r instanceof Object?Object.assign(r,t):r}}class b extends O{constructor(e,t,r){super(R(e),t||a(e),r||l(e))}}class m extends b{provide(e){return this._instance||(this._instance=super.provide(e)),this._instance}}class j extends O{constructor(e){super(M(e))}}var k;const P=e=>new Error(`Class '${e.name}' has not been decorated as injectable and cannot be provided.`),E=e=>new Error(`Class '${e.name}' has not been decorated as injectable and cannot be resolved.`),x=e=>new Error(`No provider has been found for the requested token '${e.description}'.`);let C=k=class{constructor(e){this._registry=new Map,this._parent=null,e&&(this._parent=e),this.register(k,new j(this))}register(e,t){const n=e instanceof u?e:r(e);if(!n)throw P(e);t.injector=this,this._registry.set(n,t)}resolve(e,t=!1){let r;return r=e instanceof u?this._resolveToken(e,t):this._resolveConstructor(e,t)}_resolveConstructor(e,t=!1){const n=r(e);if(n)return this._getProvider(n)||this.register(n,new b(e)),this._resolveToken(n,t);if(!t)throw E(e)}_resolveToken(e,t=!1){const r=this._getProvider(e);if(r)return r.provide(this);if(!t)throw x(e)}_getProvider(e){return this._registry.has(e)?this._registry.get(e):this._parent?this._parent._getProvider(e):void 0}};C=k=function(e,t,r,n){var s,o=arguments.length,a=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,n);else for(var c=e.length-1;c>=0;c--)(s=e[c])&&(a=(o<3?s(a):o>3?s(t,r,a):s(t,r))||a);return o>3&&a&&Object.defineProperty(t,r,a),a}([w(),function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}("design:paramtypes",[C])],C);export{r as getTokenAnnotation,n as setTokenAnnotation,s as getParameterAnnotation,o as setParameterAnnotation,a as getParameterAnnotations,c as getPropertyAnnotation,i as setPropertyAnnotation,l as getPropertyAnnotations,g as inject,w as injectable,v as optional,R as createClassFactory,_ as createSingletonFactory,M as createValueFactory,y as PROVIDER_UNREGISTERED,O as BaseProvider,b as ClassProvider,m as SingletonProvider,j as ValueProvider,u as InjectToken,P as CLASS_NOT_PROVIDABLE,E as CLASS_NOT_RESOLVABLE,x as NO_PROVIDER,C as Injector};
//# sourceMappingURL=index.esm.js.map
