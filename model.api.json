{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.3.4",
    "schemaVersion": 1002,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "docComment": "",
  "name": "injector",
  "members": [
    {
      "kind": "EntryPoint",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "docComment": "/**\n * The `BaseProvider` class\n *\n * @remarks\n *\n * `BaseProvider` uses a factory function to provide a value. The provider's parameter dependencies will be used to invoke the factory function. The provider's property dependencies will be set on the factory function's return value. Each of the dependencies will be resolved using an `Injector` instance which must be passed to the provider's {@link provide} method.\n * ```typescript\n * @injectable()\n * class Foo {}\n *\n * @injectable()\n * class Bar {}\n *\n * const factory = (foo: Foo, bar: Bar) => ({ foo: foo, bar: bar });\n *\n * const provider = new BaseProvider(factory, [\n *      new DependencyAnnotation(Foo),\n *      new DependencyAnnotation(Bar)\n * ]);\n *\n * const injector = new Injector();\n *\n * provider.provide(injector);\n *\n * // or more naturally...\n *\n * interface FooBar {\n *      foo: Foo;\n *      bar: Bar;\n * }\n *\n * const token = new InjectToken<FooBar>('FooBar');\n *\n * injector.register(token, provider);\n *\n * injector.resolve(token)!;\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "BaseProvider"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> implements "
            },
            {
              "kind": "Reference",
              "text": "Provider"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "BaseProvider",
          "members": [
            {
              "kind": "Constructor",
              "docComment": "/**\n * The `BaseProvider` constructor\n *\n * @param factory - The provider's factory function\n *\n * @param parameters - The parameter dependencies of the factory function\n *\n * @param properties - The property dependencies of the value returned from the factory function\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "factory"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Factory"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "parameters"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ParameterDependencies"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "properties"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyDependencies"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "factory",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "parameters",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  }
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "docComment": "/**\n * Creates the provider's provided value by invoking the factory\n *\n * @param parameters - The parameter dependencies of the factory\n *\n * @param properties - The property dependencies of the instance returned from the factory\n *\n * @returns The value created by the provider's factory\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected "
                },
                {
                  "kind": "Reference",
                  "text": "createValue"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "parameters"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "properties"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "parameters",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "createValue"
            },
            {
              "kind": "Property",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "factory"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Factory"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "factory",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "injector"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Injector"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "injector",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "parameters"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Map"
                },
                {
                  "kind": "Content",
                  "text": "<number, "
                },
                {
                  "kind": "Reference",
                  "text": "DependencyAnnotation"
                },
                {
                  "kind": "Content",
                  "text": " | any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "parameters",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "properties"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Map"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PropertyKey"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "DependencyAnnotation"
                },
                {
                  "kind": "Content",
                  "text": " | any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "properties",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 8
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "docComment": "/**\n * Get the provider's provided value\n *\n * @param injector - The injector to use to resolve the provider's dependencies\n *\n * @returns The provider's provided value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "provide"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "injector"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Injector"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "injector",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "provide"
            },
            {
              "kind": "Method",
              "docComment": "/**\n * Resolves the parameter dependencies for the factory\n *\n * @remarks\n *\n * If a parameter dependency is a {@link DependencyAnnotation} it will be resolved from the current injector. Otherwise its value will be used to resolve the dependency.\n *\n * @param injector - The current injector that runs the provider\n *\n * @returns An array of resolved parameter dependencies\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected "
                },
                {
                  "kind": "Reference",
                  "text": "resolveParameters"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "injector"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Injector"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "injector",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "resolveParameters"
            },
            {
              "kind": "Method",
              "docComment": "/**\n * Resolves the property dependencies for the factory\n *\n * @remarks\n *\n * If a property dependency is a {@link DependencyAnnotation} it will be resolved from the current injector. Otherwise its value will be used to resolve the dependency.\n *\n * @param injector - The current injector that runs the provider\n *\n * @returns An object of resolved property dependencies\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected "
                },
                {
                  "kind": "Reference",
                  "text": "resolveProperties"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "injector"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Injector"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "injector",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "resolveProperties"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ClassFactory"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Factory"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ClassFactory",
          "members": [
            {
              "kind": "CallSignature",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "dependencies"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "dependencies",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Class",
          "docComment": "/**\n * A provider for class instances\n *\n * @remarks\n *\n * The `ClassProvider` provides instances of classes. It can be created by passing a reference to a class to its constructor. `ClassProvider` automatically analyzes parameter and property dependencies of the class and resolves them when creating instances.\n * ```typescript\n * @injectable()\n * class Foo { }\n *\n * @injectable()\n * class Bar { }\n *\n * @injectable()\n * class FooBar {\n *\n *     @optional()\n *     @inject()\n *     bar!: Bar;\n *\n *     constructor (public foo: Foo) { }\n * }\n *\n * const provider = new ClassProvider(FooBar);\n * const injector = new Injector();\n *\n * injector.register(FooBar, provider);\n *\n * const fooBar = injector.resolve(FooBar)!;\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "ClassProvider"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "BaseProvider"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ClassProvider",
          "members": [
            {
              "kind": "Constructor",
              "docComment": "/**\n * Constructs a new instance of the `ClassProvider` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "constructorFn"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Constructor"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "parameters"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ParameterDependencies"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "properties"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyDependencies"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "constructorFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "parameters",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  }
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  }
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "Constructor"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    new (..."
            },
            {
              "kind": "Reference",
              "text": "args"
            },
            {
              "kind": "Content",
              "text": ": any[]): "
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Constructor",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 12
          }
        },
        {
          "kind": "Variable",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "createClassFactory"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">("
            },
            {
              "kind": "Reference",
              "text": "constructorFn"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "Constructor"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">) => "
            },
            {
              "kind": "Reference",
              "text": "ClassFactory"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "createClassFactory",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 15
          }
        },
        {
          "kind": "Variable",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "createSingletonFactory"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">("
            },
            {
              "kind": "Reference",
              "text": "constructorFn"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "Constructor"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">) => "
            },
            {
              "kind": "Reference",
              "text": "SingletonFactory"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "createSingletonFactory",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 15
          }
        },
        {
          "kind": "Variable",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "createValueFactory"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">("
            },
            {
              "kind": "Reference",
              "text": "value"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "ValueFactory"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "createValueFactory",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 13
          }
        },
        {
          "kind": "Class",
          "docComment": "/**\n * A dependency annotation describes a dependency that should be resolved by an injector\n *\n * @remarks\n *\n * Most classes have dependencies, either in the form of constructor parameters or in the form of properties which can be injected. When a provider is created for a class it needs to know about the class's dependencies. The provider can obtain a map of the class's dependencies by respectively calling {@link getParameterAnnotations} or {@link getPropertyAnnotations} if the class was decorated as {@link injectable}. A DependencyAnnotation does not contain a value itself, but rather a token which allows the provider to resolve the class's dependency via the injector. This allows a great deal of flexibility, especially when combined with child injectors.\n *\n * DependencyAnnotations are not only useful for class dependencies though. They can be equally useful when creating simple factory providers, where the factories dependencies should be resolved through an {@link InjectToken} at runtime.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "DependencyAnnotation"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "DependencyAnnotation",
          "members": [
            {
              "kind": "Constructor",
              "docComment": "/**\n * Constructs a new instance of the `DependencyAnnotation` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "token"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "InjectToken"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "Constructor"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "optional"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "token",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 11
                  }
                },
                {
                  "parameterName": "optional",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "optional"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "optional",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "token"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "InjectToken"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "Constructor"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 10
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "Factory"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "Factory",
          "members": [
            {
              "kind": "CallSignature",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "dependencies"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "dependencies",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "docComment": "/**\n * Decorates a class property or constructor parameter as injection target\n *\n * @remarks\n *\n * The inject decorator has two use cases: - Injecting dependencies into class properties - Injecting non-class dependencies through {@link InjectToken}s\n *\n * When used to inject class properties, it can be used without specifying an {@link InjectToken}. The property type will be used as token and the injector will create a {@link ClassProvider} for the type automatically.\n * ```typescript\n * // decorate the dependency as injectable\n * @injectable()\n * class MessageService {\n *     getMessage () { return 'foo'; }\n * }\n *\n * // decorate the consumer as injectable\n * @injectable()\n * class MessageClient {\n *     // decorate the property you want to inject\n *     @inject()\n *     public service!: MessageService;\n * }\n * ```\n *\n * When used to inject non-class properties, an {@link InjectToken} needs to be provided. An {@link InjectToken} can be used for property and parameter injection alike.\n * ```typescript\n * // an interface describing the MessageService\n * interface MessageService {\n *     getMessage (): string;\n * }\n *\n * // an `InjectToken` representing the interface\n * // use a generic type to tie the token to the interface type\n * const MESSAGE_SERVICE = new InjectToken<MessageService>('MessageService');\n *\n * // a class implementing the MessageService interface - decorated as injectable\n * @injectable()\n * class FooMessageService implements MessageService {\n *     getMessage () { return 'foo'; }\n * }\n *\n * // decorate the consumer as injectable\n * @injectable()\n * class MessageClient {\n *     // inject the implementation by using the `InjectToken`\n *     constructor (@inject(MESSAGE_SERVICE) public service: MessageService) {}\n * }\n *\n * // create an `Injector` instance\n * const injector = new Injector();\n *\n * // tell the injector how to resolve the MESSAGE_SERVICE token\n * // we are using a `ClassProvider` here, but we could use other providers as well\n * injector.register(MESSAGE_SERVICE, new ClassProvider(FooMessageService));\n * ```\n *\n * @param injectToken - An {@link InjectToken} identifying the dependency to inject\n */\n",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "inject"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">("
            },
            {
              "kind": "Reference",
              "text": "injectToken"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Reference",
              "text": "InjectToken"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> | undefined) => ("
            },
            {
              "kind": "Reference",
              "text": "target"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "Object"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "propertyKey"
            },
            {
              "kind": "Content",
              "text": ": string | number | symbol, "
            },
            {
              "kind": "Reference",
              "text": "parameterIndex"
            },
            {
              "kind": "Content",
              "text": "?: number | undefined) => void"
            }
          ],
          "releaseTag": "Public",
          "name": "inject",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 19
          }
        },
        {
          "kind": "Variable",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "injectable"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "() => ("
            },
            {
              "kind": "Reference",
              "text": "target"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "Constructor"
            },
            {
              "kind": "Content",
              "text": "<object>) => void"
            }
          ],
          "releaseTag": "Public",
          "name": "injectable",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 7
          }
        },
        {
          "kind": "Class",
          "docComment": "/**\n * The injector class\n *\n * @remarks\n *\n * - can provide itself - can create child injectors\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "Injector"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Injector",
          "members": [
            {
              "kind": "Constructor",
              "docComment": "/**\n * Creates an injector instance\n *\n * @remarks\n *\n * A child injector can be created by passing the parent injector as a constructor argument.\n * ```typescript\n * const parentInjector = new Injector();\n * const childInjector = new Injector(parentInjector);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "parent"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Injector"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "parent",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Constructor",
              "docComment": "/**\n * Creates an injector instance\n *\n * @remarks\n *\n * An injector can be configured with a default provider.\n *\n * @see {@link InjectorConfiguration#defaultProvider}\n * ```typescript\n * // configures the injector to use the SingletonProvider for injectable classes by default\n * const injector = new Injector({ defaultProvider: SingletonProvider });\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "config"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InjectorConfiguration"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  }
                }
              ]
            },
            {
              "kind": "Constructor",
              "docComment": "/**\n * Creates an injector instance\n *\n * @remarks\n *\n * A child injector can be configured with a default provider.\n *\n * @see {@link InjectorConfiguration#defaultProvider}\n * ```typescript\n * const parentInjector = new Injector();\n *\n * // configures the injector to use the SingletonProvider for injectable classes by default\n * const childInjector = new Injector(parentInjector, { defaultProvider: SingletonProvider });\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "parent"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Injector"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "config"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InjectorConfiguration"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "parent",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "docComment": "/**\n * Register a provider for a dependency with the injector\n *\n * @param constructorOrToken - The class or {@link InjectToken} for which to register the provider\n *\n * @param provider - The {@link Provider} which will be used to resolve the class or token\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "register"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "constructorOrToken"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Constructor"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "InjectToken"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "provider"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Provider"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 22,
                "endIndex": 23
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "constructorOrToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 14
                  }
                },
                {
                  "parameterName": "provider",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 21
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "register"
            },
            {
              "kind": "Method",
              "docComment": "/**\n * Resolve a dependency\n *\n * @param target - The class or {@link InjectToken} to resolve\n *\n * @param optional - Should the dependency be optional. If `true` the injector will not throw an error if it cannot resolve the dependency and returns `undefined`. If `false` the injector will throw an error if the dependency cannot be resolved.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "resolve"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "target"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Constructor"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "InjectToken"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "optional"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 21
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 14
                  }
                },
                {
                  "parameterName": "optional",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "resolve"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "docComment": "/**\n * A configuration interface for Injector\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "InjectorConfiguration"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "InjectorConfiguration",
          "members": [
            {
              "kind": "PropertySignature",
              "docComment": "/**\n * The default provider used by the injector\n *\n * @remarks\n *\n * Injector will use the default provider as provider for {@link injectable} classes, which have no provider registered explicitly. A default provider needs to accept a reference to the class it is created for as only constructor argument. {@link ClassProvider} and {@link SingletonProvider} can be used as default providers. Alternatively a custom provider with the same interface can be created and configured.\n *\n * The default value for this option is {@link ClassProvider}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "defaultProvider"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "{\n        new <"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": " = any>("
                },
                {
                  "kind": "Reference",
                  "text": "constructor"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Constructor"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">): "
                },
                {
                  "kind": "Reference",
                  "text": "Provider"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultProvider",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 15
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "docComment": "/**\n * A token that represents a dependency\n *\n * @remarks\n *\n * An {@link InjectToken} should be used to inject any type, which does not have a runtime representation, e.g. an interface, callable type or a plain value. An {@link InjectToken} is tied to a {@link Provider} using the {@link Injector.register} method.\n * ```typescript\n * interface MessageService {\n *      getMessage (): string;\n * }\n *\n * interface MessageClientConfig {\n *      checkMessages: boolean;\n *      answerMessages: boolean;\n * }\n *\n * class FooMessageService implements MessageService {\n *      getMessage () { return 'foo'; }\n * }\n *\n * // use a generic type to tie the token to the interface type\n * const MESSAGE_SERVICE = new InjectToken<MessageService>('MessageService');\n * const CONFIG = new InjectToken<MessageClientConfig>('MessageClientConfig');\n *\n * const injector = new Injector();\n *\n * injector.register(MESSAGE_SERVICE, new ClassProvider(FooMessageService));\n * injector.register(CONFIG, new ValueProvider({ checkMessages: true, answerMessages: false }));\n *\n * injector.resolve(MESSAGE_SERVICE).getMessage(); // --> 'foo'\n * injector.resolve(CONFIG); // --> { checkMessages: true, answerMessages: false }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "InjectToken"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "InjectToken",
          "members": [
            {
              "kind": "Constructor",
              "docComment": "/**\n * Constructs a new instance of the `InjectToken` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "optional"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "() => ("
            },
            {
              "kind": "Reference",
              "text": "target"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "Object"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "propertyKey"
            },
            {
              "kind": "Content",
              "text": ": string | symbol, "
            },
            {
              "kind": "Reference",
              "text": "parameterIndex"
            },
            {
              "kind": "Content",
              "text": "?: number | undefined) => void"
            }
          ],
          "releaseTag": "Public",
          "name": "optional",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "docComment": "/**\n * A map of constructor parameter dependency annotations\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "ParameterAnnotations"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "Map"
            },
            {
              "kind": "Content",
              "text": "<number, "
            },
            {
              "kind": "Reference",
              "text": "DependencyAnnotation"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ParameterAnnotations",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "docComment": "/**\n * A provider's parameter dependencies\n *\n * @remarks\n *\n * Parameter dependencies are the dependencies that will be passed into the provider's factory method. Dependencies can be {@link DependencyAnnotation}s - in which case their tokens will be resolved through the provider - or actual values - in which case they will be passed to the factory method as-is.\n *\n * Parameter dependencies can be specified as arrays in the order of the factory method's function parameters or as Maps, where the key represents the index of the function parameter. Internally the provider will convert them into Maps.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "ParameterDependencies"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "DependencyAnnotation"
            },
            {
              "kind": "Content",
              "text": " | any)[] | "
            },
            {
              "kind": "Reference",
              "text": "Map"
            },
            {
              "kind": "Content",
              "text": "<number, "
            },
            {
              "kind": "Reference",
              "text": "DependencyAnnotation"
            },
            {
              "kind": "Content",
              "text": " | any> | "
            },
            {
              "kind": "Reference",
              "text": "ParameterAnnotations"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ParameterDependencies",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "docComment": "/**\n * A map of class property dependency annotations\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "PropertyAnnotations"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "Map"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PropertyKey"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "DependencyAnnotation"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PropertyAnnotations",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "docComment": "/**\n * A provider's property dependencies\n *\n * @remarks\n *\n * Property dependencies are the dependencies that will be set on the provider's factory method return value. Dependencies can be {@link DependencyAnnotation}s - in which case their tokens will be resolved through the provider - or actual values - in which case they will be set on the factory method's return value as-is.\n *\n * Property dependencies can be specified as objects with keys matching the appropriate property keys of the factory method's return value or as Maps, where the key represents the matching property key of the factory method's return value. Internally the provider will convert them into Maps.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "PropertyDependencies"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "{\n    ["
            },
            {
              "kind": "Reference",
              "text": "key"
            },
            {
              "kind": "Content",
              "text": ": string]: "
            },
            {
              "kind": "Reference",
              "text": "DependencyAnnotation"
            },
            {
              "kind": "Content",
              "text": " | any;\n    ["
            },
            {
              "kind": "Reference",
              "text": "key"
            },
            {
              "kind": "Content",
              "text": ": number]: "
            },
            {
              "kind": "Reference",
              "text": "DependencyAnnotation"
            },
            {
              "kind": "Content",
              "text": " | any;\n} | "
            },
            {
              "kind": "Reference",
              "text": "Map"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PropertyKey"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "DependencyAnnotation"
            },
            {
              "kind": "Content",
              "text": " | any> | "
            },
            {
              "kind": "Reference",
              "text": "PropertyAnnotations"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PropertyDependencies",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 19
          }
        },
        {
          "kind": "Interface",
          "docComment": "/**\n * The generic provider interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "Provider"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "Provider",
          "members": [
            {
              "kind": "PropertySignature",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "factory"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Factory"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "factory",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "injector"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Injector"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "injector",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "parameters"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ParameterDependencies"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "parameters",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "properties"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyDependencies"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "properties",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "MethodSignature",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "provide"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "injector"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Injector"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "injector",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "provide"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "docComment": "/**\n * A configuration interface for providers\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ProviderConfiguration"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "ProviderConfiguration",
          "members": [
            {
              "kind": "PropertySignature",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "provider"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Provider"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "provider",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "token"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "InjectToken"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "Constructor"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 10
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "SingletonFactory"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Factory"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SingletonFactory",
          "members": [
            {
              "kind": "CallSignature",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "dependencies"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "dependencies",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Class",
          "docComment": "/**\n * A provider for singleton class instances\n *\n * @remarks\n *\n * The `SingletonProvidr` caches the first instance of a class it creates and subsequently returns the cached instance instead of creating new instances.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SingletonProvider"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ClassProvider"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SingletonProvider",
          "members": [
            {
              "kind": "Property",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected "
                },
                {
                  "kind": "Reference",
                  "text": "_instance"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "_instance",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "provide"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "injector"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Injector"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "injector",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "provide"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ValueFactory"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Factory"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ValueFactory",
          "members": [
            {
              "kind": "CallSignature",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": []
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Class",
          "docComment": "/**\n * A provider for static values\n *\n * @remarks\n *\n * The `ValueProvider` provides an already existing value and therefore has no dependencies. This is useful for providing primitive values, configuration objects or any value that does not need to be instantiated.\n * ```typescript\n * const CONFIG = {\n *      receiveMessages: true,\n *      answerMessages: false,\n *      channelId: 'some_id'\n * }\n *\n * const token = new InjectToken('CONFIG');\n *\n * const injector = new injector();\n *\n * injector.register(token, new ValueProvider(CONFIG));\n *\n * injector.resolve(token)!; // --> { receiveMessages: true, answerMessages: false, channelId: 'some_id' }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "ValueProvider"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "BaseProvider"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ValueProvider",
          "members": [
            {
              "kind": "Constructor",
              "docComment": "/**\n * Constructs a new instance of the `ValueProvider` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
